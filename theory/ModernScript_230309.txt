## ModernScript

    - Rest Parameter(...)
        · Arguments의 문제점
            ▷ Arguments 객체는 유사배열이기 때문에 배열의 메소드는 사용할 수 없음
            ▷ 함수 호출 시 전달한 Arguments 전체를 다루기 때문에 따로 인덱싱 통해 세분화하기 까다로움  

                function printArguments() {
                    for (const arg of arguments) {
                        console.log(arg);
                    }
                    console.log("------------------");
                }

                printArguments("Young", "Mark", "Koby");
                // Young
                // Mark
                // Koby
                // ------------------
                printArguments("Captain");
                // Captain
                // ------------------
                printArguments("Jayden", "Scott");
                // Jayden
                // Scott
                // ------------------
                printArguments("Suri", "Jack", "Joy", "Noel");
                // Suri
                // Jack
                // Joy
                // Noel
                // ------------------

        · Rest Parameter는 유사배열이 아니라 배열이기 때문에 배열인 객체를 사용할 수 있음

            function printArguments(...args) {
                console.log(args.splice(0, 2));
                console.log(arguments.splice(0, 2));
                console.log("------------------");
            }

            printArguments("Young", "Mark", "Koby");
            // Young
            // Mark
            // ------------------
            printArguments("Captain");
            // TypeError
            printArguments("Jayden", "Scott");
            printArguments("Suri", "Jack", "Joy", "Noel");

        · 일반 Parameter와 함께 사용할 수 있음
            → 앞에 정해진 파라미터에 아규먼트들을 할당하고 나머지 아규먼트들을 배열로 묶는 역할,
            일반 파라미터와 함께 사용 시 반드시 마지막에 사용할 것

                function printRank(first, second, ...others) {
                    console.log("코드잇 레이스 최종 결과");
                    console.log(`우승: ${first}`);
                    console.log(`준우승: ${second}`);
                    for (const arg of others) {
                        console.log(`참가자: ${arg}`);
                }
                }

                printRank("Phil", "Won", "Emma", "Min", "Luke");
                // 코드잇 레이스 최종 결과
                // 우승: Phil
                // 준우승: Won
                // 참가자: Emma
                // 참가자: Min
                // 참가자: Luke

        · 실습 문제
            : rest parameter를 활용해서 함수를 호출할 때 여러 개의 아규먼트를 전달할 경우 첫 번째 아규먼트는 무시하고 두 번째 아규먼트 부터 하나씩 콘솔에 출력하는 ignoreFirst 함수

                function ignoreFirst(first, ...noFirst) {
                    for (const arg of noFirst) {
                        console.log(arg);
                    }
                }

                ignoreFirst("1세대", "2세대", "3세대");
                // 2세대
                // 3세대
                ignoreFirst("곰팡이", "강아지", "고양이");
                // 강아지
                // 고양이
                ignoreFirst(20, 9, 18, 19, 30, 34, 40);
                // 9
                // 18
                // 19
                // 30
                // 34
                // 40
